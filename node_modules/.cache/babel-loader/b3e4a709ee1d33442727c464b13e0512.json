{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\_User_Profile_\\\\amnah.saleh\\\\Desktop\\\\Apps\\\\covid19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\_User_Profile_\\\\amnah.saleh\\\\Desktop\\\\Apps\\\\covid19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\_User_Profile_\\\\amnah.saleh\\\\Desktop\\\\Apps\\\\covid19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Line,Bar}from'react-chartjs-2';import{fetchDailyData}from'../../api';import styles from'./Chart.module.css';var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchApi=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchApi(){return _ref2.apply(this,arguments);};}();fetchApi();},[]);var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(250,0,0,0.5)',fill:true}]}}):null;var barChar=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'People',backgroundColor:['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)','rgba(255, 0, 0, 0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChar:lineChart);};export default Chart;","map":{"version":3,"sources":["D:/_User_Profile_/amnah.saleh/Desktop/Apps/covid19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchApi","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChar","value","legend","display","title","text","container"],"mappings":"8iBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAIA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyD,oBAAtDC,IAAsD,CAA9CC,SAA8C,WAA9CA,SAA8C,CAAnCC,SAAmC,WAAnCA,SAAmC,CAAxBC,MAAwB,WAAxBA,MAAwB,CAAdC,OAAc,MAAdA,OAAc,eACjCX,QAAQ,CAAC,EAAD,CADyB,wCAC5DY,SAD4D,eACjDC,YADiD,eAGnEZ,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,QAAQ,2FAAG,+IACbD,YADa,uBACMT,CAAAA,cAAc,EADpB,qHAAH,kBAARU,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKN,EALM,CAAT,CAOA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,cAEQ,oBAAC,IAAD,EACI,IAAI,CAAE,CACFC,MAAM,CAAEL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADN,CAEFC,QAAQ,CAAE,CACN,CACIb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADV,CAEIa,KAAK,CAAE,UAFX,CAGIC,WAAW,CAAE,SAHjB,CAIIC,IAAI,CAAE,IAJV,CADM,CAON,CACIhB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGR,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADV,CAEIW,KAAK,CAAE,QAFX,CAGIC,WAAW,CAAE,KAHjB,CAIIE,eAAe,CAAE,mBAJrB,CAKID,IAAI,CAAE,IALV,CAPM,CAFR,CADV,EAFR,CAoBc,IArBlB,CAyBA,GAAME,CAAAA,OAAO,CACTjB,SAAS,cAED,oBAAC,GAAD,EACI,IAAI,CAAE,CACFS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADN,CAEFG,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,QADA,CAEPG,eAAe,CAAE,CAAC,sBAAD,CAAyB,sBAAzB,CAAiD,sBAAjD,CAFV,CAGPjB,IAAI,CAAE,CAACC,SAAS,CAACkB,KAAX,CAAkBjB,SAAS,CAACiB,KAA5B,CAAmChB,MAAM,CAACgB,KAA1C,CAHC,CAAD,CAFR,CADV,CASI,OAAO,CAAE,CACLC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADH,CAELC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBnB,OAAtB,CAArB,CAFF,CATb,EAFC,CAgBD,IAjBZ,CAmBA,mBACI,2BAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,EACKpB,OAAO,CAAGc,OAAH,CAAaV,SADzB,CADJ,CAKH,CA3DD,CA6DA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [\r\n                            {\r\n                                data: dailyData.map(({ confirmed }) => confirmed),\r\n                                label: 'Infected',\r\n                                borderColor: '#3333ff',\r\n                                fill: true\r\n                            },\r\n                            {\r\n                                data: dailyData.map(({ deaths }) => deaths),\r\n                                label: 'Deaths',\r\n                                borderColor: 'red',\r\n                                backgroundColor: 'rgba(250,0,0,0.5)',\r\n                                fill: true\r\n                            }],\r\n                    }}\r\n                />) : null\r\n\r\n    );\r\n\r\n    const barChar = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` }\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChar : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}