{"ast":null,"code":"var _jsxFileName = \"D:\\\\_User_Profile_\\\\amnah.saleh\\\\Desktop\\\\Apps\\\\covid19-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchApi();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(250,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }) : null;\n  const barChar = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, country ? barChar : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["D:/_User_Profile_/amnah.saleh/Desktop/Apps/covid19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","Line","Bar","fetchDailyData","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchApi","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChar","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACnE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMT,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAU,IAAAA,QAAQ;AACX,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBAEQ,oBAAC,IAAD;AACI,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CACN;AACIb,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEV,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADV;AAEIa,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,WAAW,EAAE,SAHjB;AAIIC,QAAAA,IAAI,EAAE;AAJV,OADM,EAON;AACIhB,QAAAA,IAAI,EAAEK,SAAS,CAACM,GAAV,CAAc,CAAC;AAAER,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADV;AAEIW,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIE,QAAAA,eAAe,EAAE,mBAJrB;AAKID,QAAAA,IAAI,EAAE;AALV,OAPM;AAFR,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,GAoBc,IArBlB;AAyBA,QAAME,OAAO,GACTjB,SAAS,gBAED,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADN;AAEFG,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPG,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFV;AAGPjB,QAAAA,IAAI,EAAE,CAACC,SAAS,CAACkB,KAAX,EAAkBjB,SAAS,CAACiB,KAA5B,EAAmChB,MAAM,CAACgB,KAA1C;AAHC,OAAD;AAFR,KADV;AASI,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADH;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBnB,OAAQ;AAAnD;AAFF,KATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFC,GAgBD,IAjBZ;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,OAAO,GAAGc,OAAH,GAAaV,SADzB,CADJ;AAKH,CA3DD;;AA6DA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { fetchDailyData } from '../../api';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchApi();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [\r\n                            {\r\n                                data: dailyData.map(({ confirmed }) => confirmed),\r\n                                label: 'Infected',\r\n                                borderColor: '#3333ff',\r\n                                fill: true\r\n                            },\r\n                            {\r\n                                data: dailyData.map(({ deaths }) => deaths),\r\n                                label: 'Deaths',\r\n                                borderColor: 'red',\r\n                                backgroundColor: 'rgba(250,0,0,0.5)',\r\n                                fill: true\r\n                            }],\r\n                    }}\r\n                />) : null\r\n\r\n    );\r\n\r\n    const barChar = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` }\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChar : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}